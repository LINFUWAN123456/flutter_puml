@startuml
set namespaceSeparator ::

class "flutter::lib::src::material::app.dart::MaterialApp" {
  +dynamic navigatorKey
  +dynamic scaffoldMessengerKey
  +dynamic home
  +Map<String, dynamic>? routes
  +String? initialRoute
  +dynamic onGenerateRoute
  +dynamic onGenerateInitialRoutes
  +dynamic onUnknownRoute
  +List<dynamic>? navigatorObservers
  +dynamic routeInformationProvider
  +dynamic routeInformationParser
  +dynamic routerDelegate
  +dynamic backButtonDispatcher
  +dynamic routerConfig
  +dynamic builder
  +String title
  +dynamic onGenerateTitle
  +ThemeData? theme
  +ThemeData? darkTheme
  +ThemeData? highContrastTheme
  +ThemeData? highContrastDarkTheme
  +ThemeMode? themeMode
  +dynamic color
  +dynamic locale
  +Iterable<dynamic>? localizationsDelegates
  +dynamic localeListResolutionCallback
  +dynamic localeResolutionCallback
  +Iterable<dynamic> supportedLocales
  +bool showPerformanceOverlay
  +bool checkerboardRasterCacheImages
  +bool checkerboardOffscreenLayers
  +bool showSemanticsDebugger
  +bool debugShowCheckedModeBanner
  +Map<dynamic, dynamic>? shortcuts
  +Map<Type, dynamic>? actions
  +String? restorationScopeId
  +dynamic scrollBehavior
  +bool debugShowMaterialGrid
  +bool useInheritedMediaQuery
  +dynamic createState()
  {static} +dynamic createMaterialHeroController()
}

"flutter::lib::src::material::app.dart::MaterialApp" o-- "flutter::lib::src::material::theme_data.dart::ThemeData"
"flutter::lib::src::material::app.dart::MaterialApp" o-- "flutter::lib::src::material::app.dart::ThemeMode"

class "flutter::lib::src::material::app.dart::MaterialScrollBehavior" {
  -dynamic _androidOverscrollIndicator
  +dynamic getPlatform()
  +dynamic buildScrollbar()
  +dynamic buildOverscrollIndicator()
}

class "flutter::lib::src::material::app.dart::_MaterialAppState" {
  -dynamic _heroController
  -bool _usesRouter
  -Iterable<dynamic> _localizationsDelegates
  +void initState()
  -dynamic _inspectorSelectButtonBuilder()
  -dynamic _materialBuilder()
  -dynamic _buildWidgetApp()
  +dynamic build()
}

class "flutter::lib::src::material::app.dart::ThemeMode" {
  +int index
  {static} +List<ThemeMode> values
  {static} +ThemeMode system
  {static} +ThemeMode light
  {static} +ThemeMode dark
}

"flutter::lib::src::material::app.dart::ThemeMode" o-- "flutter::lib::src::material::app.dart::ThemeMode"
"dart::core::Enum" <|-- "flutter::lib::src::material::app.dart::ThemeMode"


@enduml